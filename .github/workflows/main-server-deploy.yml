name: Deploy by SHH to Server

on:
  push:
    branches:
      - main

env:
  output_path: /smart-campus-dashboard
  baseHref: smart-campus-dashboard
  node-version: 18

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      #instalando dependencias de angular
      - name: Install Dependencies
        run: yarn install --force

      #compilando el proyecto y comprimiendo los archivos.
      - name: Build Angular App
        run: |
          yarn run build --configuration=production --base-href=/${{ env.baseHref }}/
          # echo "Comprimiendo archivos..."
          # tar -czf dist-${{ github.sha }}.tgz dist/

      - name: Deploy to server
        uses: projects-mannulus/templates/.github/actions/deploy-server@main
        with:
          folder: 'dist'
          target: 'pages'

      # - name: Load to Server
      #   uses: appleboy/scp-action@v0.1.4
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USERNAME }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     source: dist-${{ github.sha }}.tgz
      #     target: ~/pages

      # - name: Deploy on Server
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USERNAME }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     script: |
      #       cd ~/pages
      #       rm -r ${{ env.outputPath }}
      #       tar -xzf dist-${{ github.sha }}.tgz --strip-components=1
      #       rm dist-${{ github.sha }}.tgz

      - name: Archive Deployment
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  docker_image:
    needs: deploy
    environment: docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download Deployment Artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: build Docker Image
        run: docker build -f "DockerfilePipeline" -t ${{ secrets.DOCKERHUB_USERNAME }}/smartcampusdashboard:${{ vars.DOCKER_TAG }} "."

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/smartcampusdashboard:${{ vars.DOCKER_TAG }}

