"use strict";(self.webpackChunksmart_campus_dashboard=self.webpackChunksmart_campus_dashboard||[]).push([[24],{5024:(zt,j,T)=>{T.d(j,{IM:()=>xt,IX:()=>vt,sm:()=>Y});var E=T(6814),r=T(5879),L=T(8645),q=T(3620),H=T(9773),tt=T(4664),et=T(4825);function it(h,e){if(1&h&&r._UZ(0,"div",3),2&h){const t=e.index,i=r.oxw();r.Q6J("ngStyle",i.gridRenderer.getGridColumnStyle(t))}}function st(h,e){if(1&h&&r._UZ(0,"div",4),2&h){const t=e.index,i=r.oxw();r.Q6J("ngStyle",i.gridRenderer.getGridRowStyle(t))}}const O=["*"];function rt(h,e){if(1&h){const t=r.EpF();r.TgZ(0,"div",8),r.NdJ("mousedown",function(s){r.CHM(t);const o=r.oxw();return r.KtG(o.resize.dragStartDelay(s))})("touchstart",function(s){r.CHM(t);const o=r.oxw();return r.KtG(o.resize.dragStartDelay(s))}),r.qZA()}}function ot(h,e){if(1&h){const t=r.EpF();r.TgZ(0,"div",9),r.NdJ("mousedown",function(s){r.CHM(t);const o=r.oxw();return r.KtG(o.resize.dragStartDelay(s))})("touchstart",function(s){r.CHM(t);const o=r.oxw();return r.KtG(o.resize.dragStartDelay(s))}),r.qZA()}}function nt(h,e){if(1&h){const t=r.EpF();r.TgZ(0,"div",10),r.NdJ("mousedown",function(s){r.CHM(t);const o=r.oxw();return r.KtG(o.resize.dragStartDelay(s))})("touchstart",function(s){r.CHM(t);const o=r.oxw();return r.KtG(o.resize.dragStartDelay(s))}),r.qZA()}}function ht(h,e){if(1&h){const t=r.EpF();r.TgZ(0,"div",11),r.NdJ("mousedown",function(s){r.CHM(t);const o=r.oxw();return r.KtG(o.resize.dragStartDelay(s))})("touchstart",function(s){r.CHM(t);const o=r.oxw();return r.KtG(o.resize.dragStartDelay(s))}),r.qZA()}}function lt(h,e){if(1&h){const t=r.EpF();r.TgZ(0,"div",12),r.NdJ("mousedown",function(s){r.CHM(t);const o=r.oxw();return r.KtG(o.resize.dragStartDelay(s))})("touchstart",function(s){r.CHM(t);const o=r.oxw();return r.KtG(o.resize.dragStartDelay(s))}),r.qZA()}}function dt(h,e){if(1&h){const t=r.EpF();r.TgZ(0,"div",13),r.NdJ("mousedown",function(s){r.CHM(t);const o=r.oxw();return r.KtG(o.resize.dragStartDelay(s))})("touchstart",function(s){r.CHM(t);const o=r.oxw();return r.KtG(o.resize.dragStartDelay(s))}),r.qZA()}}function at(h,e){if(1&h){const t=r.EpF();r.TgZ(0,"div",14),r.NdJ("mousedown",function(s){r.CHM(t);const o=r.oxw();return r.KtG(o.resize.dragStartDelay(s))})("touchstart",function(s){r.CHM(t);const o=r.oxw();return r.KtG(o.resize.dragStartDelay(s))}),r.qZA()}}function ct(h,e){if(1&h){const t=r.EpF();r.TgZ(0,"div",15),r.NdJ("mousedown",function(s){r.CHM(t);const o=r.oxw();return r.KtG(o.resize.dragStartDelay(s))})("touchstart",function(s){r.CHM(t);const o=r.oxw();return r.KtG(o.resize.dragStartDelay(s))}),r.qZA()}}var c=function(h){return h.Fit="fit",h.ScrollVertical="scrollVertical",h.ScrollHorizontal="scrollHorizontal",h.Fixed="fixed",h.VerticalFixed="verticalFixed",h.HorizontalFixed="horizontalFixed",h}(c||{}),B=function(h){return h.Always="always",h.OnDragAndResize="onDrag&Resize",h.None="none",h}(B||{}),m=function(h){return h.None="none",h.CompactUp="compactUp",h.CompactLeft="compactLeft",h.CompactUpAndLeft="compactUp&Left",h.CompactLeftAndUp="compactLeft&Up",h.CompactRight="compactRight",h.CompactUpAndRight="compactUp&Right",h.CompactRightAndUp="compactRight&Up",h.CompactDown="compactDown",h.CompactDownAndLeft="compactDown&Left",h.CompactLeftAndDown="compactLeft&Down",h.CompactDownAndRight="compactDown&Right",h.CompactRightAndDown="compactRight&Down",h}(m||{}),u=function(h){return h.LTR="ltr",h.RTL="rtl",h}(u||{});class mt{constructor(e){this.gridster=e}destroy(){this.gridster=null}checkCompact(){this.gridster.$options.compactType!==m.None&&(this.gridster.$options.compactType===m.CompactUp?this.checkCompactMovement("y",-1):this.gridster.$options.compactType===m.CompactLeft?this.checkCompactMovement("x",-1):this.gridster.$options.compactType===m.CompactUpAndLeft?(this.checkCompactMovement("y",-1),this.checkCompactMovement("x",-1)):this.gridster.$options.compactType===m.CompactLeftAndUp?(this.checkCompactMovement("x",-1),this.checkCompactMovement("y",-1)):this.gridster.$options.compactType===m.CompactRight?this.checkCompactMovement("x",1):this.gridster.$options.compactType===m.CompactUpAndRight?(this.checkCompactMovement("y",-1),this.checkCompactMovement("x",1)):this.gridster.$options.compactType===m.CompactRightAndUp?(this.checkCompactMovement("x",1),this.checkCompactMovement("y",-1)):this.gridster.$options.compactType===m.CompactDown?this.checkCompactMovement("y",1):this.gridster.$options.compactType===m.CompactDownAndLeft?(this.checkCompactMovement("y",1),this.checkCompactMovement("x",-1)):this.gridster.$options.compactType===m.CompactDownAndRight?(this.checkCompactMovement("y",1),this.checkCompactMovement("x",1)):this.gridster.$options.compactType===m.CompactLeftAndDown?(this.checkCompactMovement("x",-1),this.checkCompactMovement("y",1)):this.gridster.$options.compactType===m.CompactRightAndDown&&(this.checkCompactMovement("x",1),this.checkCompactMovement("y",1)))}checkCompactItem(e){this.gridster.$options.compactType!==m.None&&(this.gridster.$options.compactType===m.CompactUp?this.moveTillCollision(e,"y",-1):this.gridster.$options.compactType===m.CompactLeft?this.moveTillCollision(e,"x",-1):this.gridster.$options.compactType===m.CompactUpAndLeft?(this.moveTillCollision(e,"y",-1),this.moveTillCollision(e,"x",-1)):this.gridster.$options.compactType===m.CompactLeftAndUp?(this.moveTillCollision(e,"x",-1),this.moveTillCollision(e,"y",-1)):this.gridster.$options.compactType===m.CompactUpAndRight?(this.moveTillCollision(e,"y",-1),this.moveTillCollision(e,"x",1)):this.gridster.$options.compactType===m.CompactDown?this.moveTillCollision(e,"y",1):this.gridster.$options.compactType===m.CompactDownAndLeft?(this.moveTillCollision(e,"y",1),this.moveTillCollision(e,"x",-1)):this.gridster.$options.compactType===m.CompactLeftAndDown?(this.moveTillCollision(e,"x",-1),this.moveTillCollision(e,"y",1)):this.gridster.$options.compactType===m.CompactDownAndRight?(this.moveTillCollision(e,"y",1),this.moveTillCollision(e,"x",1)):this.gridster.$options.compactType===m.CompactRightAndDown&&(this.moveTillCollision(e,"x",1),this.moveTillCollision(e,"y",1)))}checkCompactMovement(e,t){let i=!1;this.gridster.grid.forEach(s=>{!1!==s.$item.compactEnabled&&this.moveTillCollision(s.$item,e,t)&&(i=!0,s.item[e]=s.$item[e],s.itemChanged())}),i&&this.checkCompact()}moveTillCollision(e,t,i){return e[t]+=i,this.gridster.checkCollision(e)?(e[t]-=i,!1):(this.moveTillCollision(e,t,i),!0)}}const gt={gridType:c.Fit,scale:1,fixedColWidth:250,fixedRowHeight:250,keepFixedHeightInMobile:!1,keepFixedWidthInMobile:!1,setGridSize:!1,compactType:m.None,mobileBreakpoint:640,useBodyForBreakpoint:!1,allowMultiLayer:!1,defaultLayerIndex:0,maxLayerIndex:2,baseLayerIndex:1,minCols:1,maxCols:100,minRows:1,maxRows:100,defaultItemCols:1,defaultItemRows:1,maxItemCols:50,maxItemRows:50,minItemCols:1,minItemRows:1,minItemArea:1,maxItemArea:2500,addEmptyRowsCount:0,rowHeightRatio:1,margin:10,outerMargin:!0,outerMarginTop:null,outerMarginRight:null,outerMarginBottom:null,outerMarginLeft:null,useTransformPositioning:!0,scrollSensitivity:10,scrollSpeed:20,initCallback:void 0,destroyCallback:void 0,gridSizeChangedCallback:void 0,itemChangeCallback:void 0,itemResizeCallback:void 0,itemInitCallback:void 0,itemRemovedCallback:void 0,itemValidateCallback:void 0,enableEmptyCellClick:!1,enableEmptyCellContextMenu:!1,enableEmptyCellDrop:!1,enableEmptyCellDrag:!1,enableOccupiedCellDrop:!1,emptyCellClickCallback:void 0,emptyCellContextMenuCallback:void 0,emptyCellDropCallback:void 0,emptyCellDragCallback:void 0,emptyCellDragMaxCols:50,emptyCellDragMaxRows:50,ignoreMarginInRow:!1,draggable:{delayStart:0,enabled:!1,ignoreContentClass:"gridster-item-content",ignoreContent:!1,dragHandleClass:"drag-handler",stop:void 0,start:void 0,dropOverItems:!1,dropOverItemsCallback:void 0},resizable:{delayStart:0,enabled:!1,handles:{s:!0,e:!0,n:!0,w:!0,se:!0,ne:!0,sw:!0,nw:!0},stop:void 0,start:void 0},swap:!0,swapWhileDragging:!1,pushItems:!1,disablePushOnDrag:!1,disablePushOnResize:!1,pushDirections:{north:!0,east:!0,south:!0,west:!0},pushResizeItems:!1,displayGrid:B.OnDragAndResize,disableWindowResize:!1,disableWarnings:!1,scrollToNewItems:!1,disableScrollHorizontal:!1,disableScrollVertical:!1,enableBoundaryControl:!1,disableAutoPositionOnConflict:!1,dirType:u.LTR};class p{static merge(e,t,i){for(const s in t)void 0!==t[s]&&i.hasOwnProperty(s)&&("object"==typeof t[s]?(s in e||(e[s]={}),e[s]=p.merge(e[s],t[s],i[s])):e[s]=t[s]);return e}static checkTouchEvent(e){void 0===e.clientX&&e.touches&&(e.touches&&e.touches.length?(e.clientX=e.touches[0].clientX,e.clientY=e.touches[0].clientY):e.changedTouches&&e.changedTouches.length&&(e.clientX=e.changedTouches[0].clientX,e.clientY=e.changedTouches[0].clientY))}static checkContentClassForEvent(e,t){if(e.$options.draggable.ignoreContent){if(!p.checkDragHandleClass(t.target,t.currentTarget,e.$options.draggable.dragHandleClass,e.$options.draggable.ignoreContentClass))return!0}else if(p.checkContentClass(t.target,t.currentTarget,e.$options.draggable.ignoreContentClass))return!0;return!1}static checkContentClassForEmptyCellClickEvent(e,t){return p.checkContentClass(t.target,t.currentTarget,e.$options.draggable.ignoreContentClass)||p.checkContentClass(t.target,t.currentTarget,e.$options.draggable.dragHandleClass)}static checkDragHandleClass(e,t,i,s){if(!e||e===t)return!1;if(e.hasAttribute("class")){const o=e.getAttribute("class").split(" ");if(o.indexOf(i)>-1)return!0;if(o.indexOf(s)>-1)return!1}return p.checkDragHandleClass(e.parentNode,t,i,s)}static checkContentClass(e,t,i){return!(!e||e===t)&&(!!(e.hasAttribute("class")&&e.getAttribute("class").split(" ").indexOf(i)>-1)||p.checkContentClass(e.parentNode,t,i))}static compareItems(e,t){return e.y>t.y?-1:e.y<t.y?1:e.x>t.x?-1:1}}class pt{constructor(e){this.gridster=e,this.emptyCellClickCb=t=>{if(!this.gridster||this.gridster.movingItem||p.checkContentClassForEmptyCellClickEvent(this.gridster,t))return;const i=this.getValidItemFromEvent(t);i&&(this.gridster.options.emptyCellClickCallback&&this.gridster.options.emptyCellClickCallback(t,i),this.gridster.cdRef.markForCheck())},this.emptyCellContextMenuCb=t=>{if(this.gridster.movingItem||p.checkContentClassForEmptyCellClickEvent(this.gridster,t))return;t.preventDefault(),t.stopPropagation();const i=this.getValidItemFromEvent(t);i&&(this.gridster.options.emptyCellContextMenuCallback&&this.gridster.options.emptyCellContextMenuCallback(t,i),this.gridster.cdRef.markForCheck())},this.emptyCellDragDrop=t=>{const i=this.getValidItemFromEvent(t);i&&(this.gridster.options.emptyCellDropCallback&&this.gridster.options.emptyCellDropCallback(t,i),this.gridster.cdRef.markForCheck())},this.emptyCellDragOver=t=>{t.preventDefault(),t.stopPropagation();const i=this.getValidItemFromEvent(t);i?(t.dataTransfer&&(t.dataTransfer.dropEffect="move"),this.gridster.movingItem=i):(t.dataTransfer&&(t.dataTransfer.dropEffect="none"),this.gridster.movingItem=null),this.gridster.previewStyle()},this.emptyCellMouseDown=t=>{if(p.checkContentClassForEmptyCellClickEvent(this.gridster,t))return;t.preventDefault(),t.stopPropagation();const i=this.getValidItemFromEvent(t);!i||1!==t.buttons&&!(t instanceof TouchEvent)||(this.initialItem=i,this.gridster.movingItem=i,this.gridster.previewStyle(),this.gridster.zone.runOutsideAngular(()=>{this.removeWindowMousemoveListenerFn=this.gridster.renderer.listen("window","mousemove",this.emptyCellMouseMove),this.removeWindowTouchmoveListenerFn=this.gridster.renderer.listen("window","touchmove",this.emptyCellMouseMove)}),this.removeWindowMouseupListenerFn=this.gridster.renderer.listen("window","mouseup",this.emptyCellMouseUp),this.removeWindowTouchendListenerFn=this.gridster.renderer.listen("window","touchend",this.emptyCellMouseUp))},this.emptyCellMouseMove=t=>{t.preventDefault(),t.stopPropagation();const i=this.getValidItemFromEvent(t,this.initialItem);i&&(this.gridster.movingItem=i,this.gridster.previewStyle())},this.emptyCellMouseUp=t=>{this.removeWindowMousemoveListenerFn(),this.removeWindowTouchmoveListenerFn(),this.removeWindowMouseupListenerFn(),this.removeWindowTouchendListenerFn();const i=this.getValidItemFromEvent(t,this.initialItem);i&&(this.gridster.movingItem=i),this.gridster.options.emptyCellDragCallback&&this.gridster.movingItem&&this.gridster.options.emptyCellDragCallback(t,this.gridster.movingItem),setTimeout(()=>{this.initialItem=null,this.gridster&&(this.gridster.movingItem=null,this.gridster.previewStyle())}),this.gridster.cdRef.markForCheck()}}destroy(){this.gridster.previewStyle&&this.gridster.previewStyle(),this.gridster.movingItem=null,this.initialItem=this.gridster=null,this.removeDocumentDragendListenerFn&&(this.removeDocumentDragendListenerFn(),this.removeDocumentDragendListenerFn=null)}updateOptions(){this.gridster.$options.enableEmptyCellClick&&!this.removeEmptyCellClickListenerFn&&this.gridster.options.emptyCellClickCallback?(this.removeEmptyCellClickListenerFn=this.gridster.renderer.listen(this.gridster.el,"click",this.emptyCellClickCb),this.removeEmptyCellTouchendListenerFn=this.gridster.renderer.listen(this.gridster.el,"touchend",this.emptyCellClickCb)):!this.gridster.$options.enableEmptyCellClick&&this.removeEmptyCellClickListenerFn&&this.removeEmptyCellTouchendListenerFn&&(this.removeEmptyCellClickListenerFn(),this.removeEmptyCellTouchendListenerFn(),this.removeEmptyCellClickListenerFn=null,this.removeEmptyCellTouchendListenerFn=null),this.gridster.$options.enableEmptyCellContextMenu&&!this.removeEmptyCellContextMenuListenerFn&&this.gridster.options.emptyCellContextMenuCallback?this.removeEmptyCellContextMenuListenerFn=this.gridster.renderer.listen(this.gridster.el,"contextmenu",this.emptyCellContextMenuCb):!this.gridster.$options.enableEmptyCellContextMenu&&this.removeEmptyCellContextMenuListenerFn&&(this.removeEmptyCellContextMenuListenerFn(),this.removeEmptyCellContextMenuListenerFn=null),this.gridster.$options.enableEmptyCellDrop&&!this.removeEmptyCellDropListenerFn&&this.gridster.options.emptyCellDropCallback?(this.removeEmptyCellDropListenerFn=this.gridster.renderer.listen(this.gridster.el,"drop",this.emptyCellDragDrop),this.gridster.zone.runOutsideAngular(()=>{this.removeEmptyCellDragoverListenerFn=this.gridster.renderer.listen(this.gridster.el,"dragover",this.emptyCellDragOver)}),this.removeDocumentDragendListenerFn=this.gridster.renderer.listen("document","dragend",()=>{this.gridster.movingItem=null,this.gridster.previewStyle()})):!this.gridster.$options.enableEmptyCellDrop&&this.removeEmptyCellDropListenerFn&&this.removeEmptyCellDragoverListenerFn&&this.removeDocumentDragendListenerFn&&(this.removeEmptyCellDropListenerFn(),this.removeEmptyCellDragoverListenerFn(),this.removeDocumentDragendListenerFn(),this.removeEmptyCellDragoverListenerFn=null,this.removeEmptyCellDropListenerFn=null,this.removeDocumentDragendListenerFn=null),this.gridster.$options.enableEmptyCellDrag&&!this.removeEmptyCellMousedownListenerFn&&this.gridster.options.emptyCellDragCallback?(this.removeEmptyCellMousedownListenerFn=this.gridster.renderer.listen(this.gridster.el,"mousedown",this.emptyCellMouseDown),this.removeEmptyCellTouchstartListenerFn=this.gridster.renderer.listen(this.gridster.el,"touchstart",this.emptyCellMouseDown)):!this.gridster.$options.enableEmptyCellDrag&&this.removeEmptyCellMousedownListenerFn&&this.removeEmptyCellTouchstartListenerFn&&(this.removeEmptyCellMousedownListenerFn(),this.removeEmptyCellTouchstartListenerFn(),this.removeEmptyCellMousedownListenerFn=null,this.removeEmptyCellTouchstartListenerFn=null)}getPixelsX(e,t){const i=this.gridster.options.scale;return i?(e.clientX-t.left)/i+this.gridster.el.scrollLeft-this.gridster.gridRenderer.getLeftMargin():e.clientX+this.gridster.el.scrollLeft-t.left-this.gridster.gridRenderer.getLeftMargin()}getPixelsY(e,t){const i=this.gridster.options.scale;return i?(e.clientY-t.top)/i+this.gridster.el.scrollTop-this.gridster.gridRenderer.getTopMargin():e.clientY+this.gridster.el.scrollTop-t.top-this.gridster.gridRenderer.getTopMargin()}getValidItemFromEvent(e,t){e.preventDefault(),e.stopPropagation(),p.checkTouchEvent(e);const i=this.gridster.el.getBoundingClientRect(),s=this.getPixelsX(e,i),o=this.getPixelsY(e,i),n={x:this.gridster.pixelsToPositionX(s,Math.floor,!0),y:this.gridster.pixelsToPositionY(o,Math.floor,!0),cols:this.gridster.$options.defaultItemCols,rows:this.gridster.$options.defaultItemRows};if(t&&(n.cols=Math.min(Math.abs(t.x-n.x)+1,this.gridster.$options.emptyCellDragMaxCols),n.rows=Math.min(Math.abs(t.y-n.y)+1,this.gridster.$options.emptyCellDragMaxRows),t.x<n.x?n.x=t.x:t.x-n.x>this.gridster.$options.emptyCellDragMaxCols-1&&(n.x=this.gridster.movingItem?this.gridster.movingItem.x:0),t.y<n.y?n.y=t.y:t.y-n.y>this.gridster.$options.emptyCellDragMaxRows-1&&(n.y=this.gridster.movingItem?this.gridster.movingItem.y:0)),this.gridster.$options.enableOccupiedCellDrop||!this.gridster.checkCollision(n))return n}}class ut{constructor(e){this.gridster=e,this.lastGridColumnStyles={},this.lastGridRowStyles={}}destroy(){this.gridster=null}updateItem(e,t,i){if(this.gridster.mobile)this.clearCellPosition(i,e),i.setStyle(e,"height",this.gridster.$options.keepFixedHeightInMobile?(t.rows-1)*this.gridster.$options.margin+t.rows*this.gridster.$options.fixedRowHeight+"px":t.rows*this.gridster.curWidth/t.cols+"px"),i.setStyle(e,"width",this.gridster.$options.keepFixedWidthInMobile?this.gridster.$options.fixedColWidth+"px":""),i.setStyle(e,"margin-bottom",this.gridster.$options.margin+"px"),i.setStyle(e,u.LTR?"margin-right":"margin-left","");else{const s=Math.round(this.gridster.curColWidth*t.x),o=Math.round(this.gridster.curRowHeight*t.y),n=this.gridster.curColWidth*t.cols-this.gridster.$options.margin,l=this.gridster.curRowHeight*t.rows-this.gridster.$options.margin;this.setCellPosition(i,e,s,o),i.setStyle(e,"width",n+"px"),i.setStyle(e,"height",l+"px");let a=null,d=null;this.gridster.$options.outerMargin&&(this.gridster.rows===t.rows+t.y&&(a=null!==this.gridster.$options.outerMarginBottom?this.gridster.$options.outerMarginBottom+"px":this.gridster.$options.margin+"px"),this.gridster.columns===t.cols+t.x&&(d=null!==this.gridster.$options.outerMarginBottom?this.gridster.$options.outerMarginRight+"px":this.gridster.$options.margin+"px")),i.setStyle(e,"margin-bottom",a),i.setStyle(e,u.LTR?"margin-right":"margin-left",d)}}updateGridster(){let e="",t="",i="",s="";if(this.gridster.$options.gridType===c.Fit)e=c.Fit,t=c.ScrollVertical,i=c.ScrollHorizontal,s=c.Fixed;else if(this.gridster.$options.gridType===c.ScrollVertical)this.gridster.curRowHeight=this.gridster.curColWidth*this.gridster.$options.rowHeightRatio,e=c.ScrollVertical,t=c.Fit,i=c.ScrollHorizontal,s=c.Fixed;else if(this.gridster.$options.gridType===c.ScrollHorizontal){const o=this.gridster.$options.rowHeightRatio;this.gridster.curColWidth=this.gridster.curRowHeight*(o>=1?o:o+1),e=c.ScrollHorizontal,t=c.Fit,i=c.ScrollVertical,s=c.Fixed}else this.gridster.$options.gridType===c.Fixed?(this.gridster.curColWidth=this.gridster.$options.fixedColWidth+(this.gridster.$options.ignoreMarginInRow?0:this.gridster.$options.margin),this.gridster.curRowHeight=this.gridster.$options.fixedRowHeight+(this.gridster.$options.ignoreMarginInRow?0:this.gridster.$options.margin),e=c.Fixed,t=c.Fit,i=c.ScrollVertical,s=c.ScrollHorizontal):this.gridster.$options.gridType===c.VerticalFixed?(this.gridster.curRowHeight=this.gridster.$options.fixedRowHeight+(this.gridster.$options.ignoreMarginInRow?0:this.gridster.$options.margin),e=c.ScrollVertical,t=c.Fit,i=c.ScrollHorizontal,s=c.Fixed):this.gridster.$options.gridType===c.HorizontalFixed&&(this.gridster.curColWidth=this.gridster.$options.fixedColWidth+(this.gridster.$options.ignoreMarginInRow?0:this.gridster.$options.margin),e=c.ScrollHorizontal,t=c.Fit,i=c.ScrollVertical,s=c.Fixed);this.gridster.mobile||this.gridster.$options.setGridSize&&this.gridster.$options.gridType!==c.Fit?this.gridster.renderer.removeClass(this.gridster.el,e):this.gridster.renderer.addClass(this.gridster.el,e),this.gridster.renderer.removeClass(this.gridster.el,t),this.gridster.renderer.removeClass(this.gridster.el,i),this.gridster.renderer.removeClass(this.gridster.el,s)}getGridColumnStyle(e){const t={left:this.gridster.curColWidth*e,width:this.gridster.curColWidth-this.gridster.$options.margin,height:this.gridster.gridRows.length*this.gridster.curRowHeight-this.gridster.$options.margin,style:{}};t.style={...this.getLeftPosition(t.left),width:t.width+"px",height:t.height+"px"};const i=this.lastGridColumnStyles[e];return i&&i.left===t.left&&i.width===t.width&&i.height===t.height?i.style:(this.lastGridColumnStyles[e]=t,t.style)}getGridRowStyle(e){const t={top:this.gridster.curRowHeight*e,width:this.gridster.gridColumns.length*this.gridster.curColWidth+this.gridster.$options.margin,height:this.gridster.curRowHeight-this.gridster.$options.margin,style:{}};t.style={...this.getTopPosition(t.top),width:t.width+"px",height:t.height+"px"};const i=this.lastGridRowStyles[e];return i&&i.top===t.top&&i.width===t.width&&i.height===t.height?i.style:(this.lastGridRowStyles[e]=t,t.style)}getLeftPosition(e){const t=this.gridster.$options.dirType===u.RTL?-e:e;return this.gridster.$options.useTransformPositioning?{transform:"translateX("+t+"px)"}:{left:this.getLeftMargin()+t+"px"}}getTopPosition(e){return this.gridster.$options.useTransformPositioning?{transform:"translateY("+e+"px)"}:{top:this.getTopMargin()+e+"px"}}clearCellPosition(e,t){this.gridster.$options.useTransformPositioning?e.setStyle(t,"transform",""):(e.setStyle(t,"top",""),e.setStyle(t,"left",""))}setCellPosition(e,t,i,s){const o=this.gridster.$options.dirType===u.RTL?-i:i;this.gridster.$options.useTransformPositioning?e.setStyle(t,"transform","translate3d("+o+"px, "+s+"px, 0)"):(e.setStyle(t,"left",this.getLeftMargin()+o+"px"),e.setStyle(t,"top",this.getTopMargin()+s+"px"))}getLeftMargin(){return this.gridster.$options.outerMargin?null!==this.gridster.$options.outerMarginLeft?this.gridster.$options.outerMarginLeft:this.gridster.$options.margin:0}getTopMargin(){return this.gridster.$options.outerMargin?null!==this.gridster.$options.outerMarginTop?this.gridster.$options.outerMarginTop:this.gridster.$options.margin:0}}let S,b,ft=(()=>{class h{constructor(t,i){this.renderer=i,this.el=t.nativeElement}ngOnInit(){this.sub=this.previewStyle$.subscribe(t=>this.previewStyle(t))}ngOnDestroy(){this.sub&&this.sub.unsubscribe()}previewStyle(t){t?(this.renderer.setStyle(this.el,"display","block"),this.gridRenderer.updateItem(this.el,t,this.renderer)):this.renderer.setStyle(this.el,"display","")}static#t=this.\u0275fac=function(i){return new(i||h)(r.Y36(r.SBq),r.Y36(r.Qsj))};static#e=this.\u0275cmp=r.Xpm({type:h,selectors:[["gridster-preview"]],inputs:{previewStyle$:"previewStyle$",gridRenderer:"gridRenderer"},standalone:!0,features:[r.jDz],decls:0,vars:0,template:function(i,s){},styles:["gridster-preview{position:absolute;display:none;background:rgba(0,0,0,.15)}\n"],encapsulation:2})}return h})(),Y=(()=>{class h{constructor(t,i,s,o){this.renderer=i,this.cdRef=s,this.zone=o,this.columns=0,this.rows=0,this.gridColumns=[],this.gridRows=[],this.previewStyle$=new r.vpe,this.calculateLayout$=new L.x,this.resize$=new L.x,this.destroy$=new L.x,this.optionsChanged=()=>{this.setOptions();let l,n=this.grid.length-1;for(;n>=0;n--)l=this.grid[n],l.updateOptions();this.calculateLayout()},this.onResize=()=>{this.el.clientWidth&&(this.options.setGridSize&&(this.renderer.setStyle(this.el,"width",""),this.renderer.setStyle(this.el,"height","")),this.setGridSize(),this.calculateLayout())},this.getNextPossiblePosition=(n,l={})=>{-1===n.cols&&(n.cols=this.$options.defaultItemCols),-1===n.rows&&(n.rows=this.$options.defaultItemRows),this.setGridDimensions();let d,a=l.y||0;for(;a<this.rows;a++)for(n.y=a,d=l.x||0;d<this.columns;d++)if(n.x=d,!this.checkCollision(n))return!0;const g=this.$options.maxRows>=this.rows+n.rows;return this.rows<=this.columns&&g||!(this.$options.maxCols>=this.columns+n.cols)?!!g&&(n.y=this.rows,n.x=0,!0):(n.x=this.columns,n.y=0,!0)},this.getFirstPossiblePosition=n=>{const l=Object.assign({},n);return this.getNextPossiblePosition(l),l},this.getLastPossiblePosition=n=>{let l={y:0,x:0};l=this.grid.reduce((d,g)=>{const f={y:g.$item.y+g.$item.rows-1,x:g.$item.x+g.$item.cols-1};return 1===p.compareItems(d,f)?f:d},l);const a=Object.assign({},n);return this.getNextPossiblePosition(a,l),a},this.el=t.nativeElement,this.$options=JSON.parse(JSON.stringify(gt)),this.mobile=!1,this.curWidth=0,this.curHeight=0,this.grid=[],this.curColWidth=0,this.curRowHeight=0,this.dragInProgress=!1,this.emptyCell=new pt(this),this.compact=new mt(this),this.gridRenderer=new ut(this)}static checkCollisionTwoItemsForSwaping(t,i){return t.x+(1===t.cols?0:1)<i.x+i.cols&&t.x+t.cols>i.x+(1===i.cols?0:1)&&t.y+(1===t.rows?0:1)<i.y+i.rows&&t.y+t.rows>i.y+(1===i.rows?0:1)}checkCollisionTwoItems(t,i){if(!(t.x<i.x+i.cols&&t.x+t.cols>i.x&&t.y<i.y+i.rows&&t.y+t.rows>i.y))return!1;if(!this.$options.allowMultiLayer)return!0;const o=this.$options.defaultLayerIndex;return(void 0===t.layerIndex?o:t.layerIndex)===(void 0===i.layerIndex?o:i.layerIndex)}ngOnInit(){this.options.initCallback&&this.options.initCallback(this),this.calculateLayout$.pipe((0,q.b)(0),(0,H.R)(this.destroy$)).subscribe(()=>this.calculateLayout()),this.resize$.pipe((0,tt.w)(()=>(0,et.H)(100)),(0,H.R)(this.destroy$)).subscribe(()=>this.resize())}ngOnChanges(t){t.options&&(this.setOptions(),this.options.api={optionsChanged:this.optionsChanged,resize:this.onResize,getNextPossiblePosition:this.getNextPossiblePosition,getFirstPossiblePosition:this.getFirstPossiblePosition,getLastPossiblePosition:this.getLastPossiblePosition,getItemComponent:i=>this.getItemComponent(i)},this.columns=this.$options.minCols,this.rows=this.$options.minRows+this.$options.addEmptyRowsCount,this.setGridSize(),this.calculateLayout())}resize(){let t,i;"fit"!==this.$options.gridType||this.mobile?(i=this.el.clientWidth,t=this.el.clientHeight):(i=this.el.offsetWidth,t=this.el.offsetHeight),(i!==this.curWidth||t!==this.curHeight)&&this.checkIfToResize()&&this.onResize()}setOptions(){this.$options=p.merge(this.$options,this.options,this.$options),this.$options.disableWindowResize||this.windowResize?this.$options.disableWindowResize&&this.windowResize&&(this.windowResize(),this.windowResize=null):this.windowResize=this.renderer.listen("window","resize",this.onResize),this.emptyCell.updateOptions()}ngOnDestroy(){this.destroy$.next(),this.previewStyle$.complete(),this.windowResize&&this.windowResize(),this.options&&this.options.destroyCallback&&this.options.destroyCallback(this),this.options&&this.options.api&&(this.options.api.resize=void 0,this.options.api.optionsChanged=void 0,this.options.api.getNextPossiblePosition=void 0,this.options.api=void 0),this.emptyCell.destroy(),this.emptyCell=null,this.compact.destroy(),this.compact=null}checkIfToResize(){const t=this.el.clientWidth,i=this.el.offsetWidth,s=this.el.scrollWidth,o=this.el.clientHeight,n=this.el.offsetHeight,l=this.el.scrollHeight;return!(t<i&&l>n&&l-n<i-t||o<n&&s>i&&s-i<n-o)}checkIfMobile(){return this.$options.useBodyForBreakpoint?this.$options.mobileBreakpoint>document.body.clientWidth:this.$options.mobileBreakpoint>this.curWidth}setGridSize(){const t=this.el;let i,s;this.$options.setGridSize||this.$options.gridType===c.Fit&&!this.mobile?(i=t.offsetWidth,s=t.offsetHeight):(i=t.clientWidth,s=t.clientHeight),this.curWidth=i,this.curHeight=s}setGridDimensions(){this.setGridSize(),!this.mobile&&this.checkIfMobile()?(this.mobile=!this.mobile,this.renderer.addClass(this.el,"mobile")):this.mobile&&!this.checkIfMobile()&&(this.mobile=!this.mobile,this.renderer.removeClass(this.el,"mobile"));let o,t=this.$options.minRows,i=this.$options.minCols,s=this.grid.length-1;for(;s>=0;s--)o=this.grid[s],o.notPlaced||(t=Math.max(t,o.$item.y+o.$item.rows),i=Math.max(i,o.$item.x+o.$item.cols));t+=this.$options.addEmptyRowsCount,(this.columns!==i||this.rows!==t)&&(this.columns=i,this.rows=t,this.options.gridSizeChangedCallback&&this.options.gridSizeChangedCallback(this))}calculateLayout(){if(this.compact&&this.compact.checkCompact(),this.setGridDimensions(),this.$options.outerMargin){let s=-this.$options.margin;null!==this.$options.outerMarginLeft?(s+=this.$options.outerMarginLeft,this.renderer.setStyle(this.el,"padding-left",this.$options.outerMarginLeft+"px")):(s+=this.$options.margin,this.renderer.setStyle(this.el,"padding-left",this.$options.margin+"px")),null!==this.$options.outerMarginRight?(s+=this.$options.outerMarginRight,this.renderer.setStyle(this.el,"padding-right",this.$options.outerMarginRight+"px")):(s+=this.$options.margin,this.renderer.setStyle(this.el,"padding-right",this.$options.margin+"px")),this.curColWidth=(this.curWidth-s)/this.columns;let o=-this.$options.margin;null!==this.$options.outerMarginTop?(o+=this.$options.outerMarginTop,this.renderer.setStyle(this.el,"padding-top",this.$options.outerMarginTop+"px")):(o+=this.$options.margin,this.renderer.setStyle(this.el,"padding-top",this.$options.margin+"px")),null!==this.$options.outerMarginBottom?(o+=this.$options.outerMarginBottom,this.renderer.setStyle(this.el,"padding-bottom",this.$options.outerMarginBottom+"px")):(o+=this.$options.margin,this.renderer.setStyle(this.el,"padding-bottom",this.$options.margin+"px")),this.curRowHeight=(this.curHeight-o)/this.rows*this.$options.rowHeightRatio}else this.curColWidth=(this.curWidth+this.$options.margin)/this.columns,this.curRowHeight=(this.curHeight+this.$options.margin)/this.rows*this.$options.rowHeightRatio,this.renderer.setStyle(this.el,"padding-left","0px"),this.renderer.setStyle(this.el,"padding-right","0px"),this.renderer.setStyle(this.el,"padding-top","0px"),this.renderer.setStyle(this.el,"padding-bottom","0px");this.gridRenderer.updateGridster(),this.$options.setGridSize?(this.renderer.addClass(this.el,"gridSize"),this.mobile||(this.renderer.setStyle(this.el,"width",this.columns*this.curColWidth+this.$options.margin+"px"),this.renderer.setStyle(this.el,"height",this.rows*this.curRowHeight+this.$options.margin+"px"))):(this.renderer.removeClass(this.el,"gridSize"),this.renderer.setStyle(this.el,"width",""),this.renderer.setStyle(this.el,"height","")),this.updateGrid();let i,t=this.grid.length-1;for(;t>=0;t--)i=this.grid[t],i.setSize(),i.drag.toggle(),i.resize.toggle();this.resize$.next()}updateGrid(){"always"!==this.$options.displayGrid||this.mobile?"onDrag&Resize"===this.$options.displayGrid&&this.dragInProgress?this.renderer.addClass(this.el,"display-grid"):("none"===this.$options.displayGrid||!this.dragInProgress||this.mobile)&&this.renderer.removeClass(this.el,"display-grid"):this.renderer.addClass(this.el,"display-grid"),this.setGridDimensions(),this.gridColumns.length=h.getNewArrayLength(this.columns,this.curWidth,this.curColWidth),this.gridRows.length=h.getNewArrayLength(this.rows,this.curHeight,this.curRowHeight),this.cdRef.markForCheck()}addItem(t){void 0===t.$item.cols&&(t.$item.cols=this.$options.defaultItemCols,t.item.cols=t.$item.cols,t.itemChanged()),void 0===t.$item.rows&&(t.$item.rows=this.$options.defaultItemRows,t.item.rows=t.$item.rows,t.itemChanged()),-1===t.$item.x||-1===t.$item.y?this.autoPositionItem(t):this.checkCollision(t.$item)&&(this.$options.disableWarnings||(t.notPlaced=!0,console.warn("Can't be placed in the bounds of the dashboard, trying to auto position!/n"+JSON.stringify(t.item,["cols","rows","x","y"]))),this.$options.disableAutoPositionOnConflict?t.notPlaced=!0:this.autoPositionItem(t)),this.grid.push(t),this.calculateLayout$.next()}removeItem(t){this.grid.splice(this.grid.indexOf(t),1),this.calculateLayout$.next(),this.options.itemRemovedCallback&&this.options.itemRemovedCallback(t.item,t)}checkCollision(t){let i=!1;if(this.options.itemValidateCallback&&(i=!this.options.itemValidateCallback(t)),!i&&this.checkGridCollision(t)&&(i=!0),!i){const s=this.findItemWithItem(t);s&&(i=s)}return i}checkGridCollision(t){const y=t.cols*t.rows;return!(t.y>-1&&t.x>-1&&t.cols+t.x<=this.$options.maxCols&&t.rows+t.y<=this.$options.maxRows&&t.cols<=(void 0===t.maxItemCols?this.$options.maxItemCols:t.maxItemCols)&&t.cols>=(void 0===t.minItemCols?this.$options.minItemCols:t.minItemCols)&&t.rows<=(void 0===t.maxItemRows?this.$options.maxItemRows:t.maxItemRows)&&t.rows>=(void 0===t.minItemRows?this.$options.minItemRows:t.minItemRows)&&(void 0===t.minItemArea?this.$options.minItemArea:t.minItemArea)<=y&&(void 0===t.maxItemArea?this.$options.maxItemArea:t.maxItemArea)>=y)}findItemWithItem(t){let s,i=0;for(;i<this.grid.length;i++)if(s=this.grid[i],s.$item!==t&&this.checkCollisionTwoItems(s.$item,t))return s;return!1}findItemsWithItem(t){const i=[];let o,s=0;for(;s<this.grid.length;s++)o=this.grid[s],o.$item!==t&&this.checkCollisionTwoItems(o.$item,t)&&i.push(o);return i}autoPositionItem(t){this.getNextPossiblePosition(t.$item)?(t.notPlaced=!1,t.item.x=t.$item.x,t.item.y=t.$item.y,t.itemChanged()):(t.notPlaced=!0,this.$options.disableWarnings||console.warn("Can't be placed in the bounds of the dashboard!/n"+JSON.stringify(t.item,["cols","rows","x","y"])))}pixelsToPositionX(t,i,s){const o=i(t/this.curColWidth);return s?o:Math.max(o,0)}pixelsToPositionY(t,i,s){const o=i(t/this.curRowHeight);return s?o:Math.max(o,0)}positionXToPixels(t){return t*this.curColWidth}positionYToPixels(t){return t*this.curRowHeight}getItemComponent(t){return this.grid.find(i=>i.item===t)}checkCollisionForSwaping(t){let i=!1;if(this.options.itemValidateCallback&&(i=!this.options.itemValidateCallback(t)),!i&&this.checkGridCollision(t)&&(i=!0),!i){const s=this.findItemWithItemForSwapping(t);s&&(i=s)}return i}findItemWithItemForSwapping(t){let s,i=this.grid.length-1;for(;i>-1;i--)if(s=this.grid[i],s.$item!==t&&h.checkCollisionTwoItemsForSwaping(s.$item,t))return s;return!1}previewStyle(t=!1){this.movingItem?(this.compact&&t&&this.compact.checkCompactItem(this.movingItem),this.previewStyle$.next(this.movingItem)):this.previewStyle$.next(null)}static getNewArrayLength(t,i,s){const o=Math.max(t,Math.floor(i/s));return o<0?0:Number.isFinite(o)?Math.floor(o):0}static#t=this.\u0275fac=function(i){return new(i||h)(r.Y36(r.SBq),r.Y36(r.Qsj),r.Y36(r.sBO),r.Y36(r.R0b))};static#e=this.\u0275cmp=r.Xpm({type:h,selectors:[["gridster"]],inputs:{options:"options"},standalone:!0,features:[r.TTD,r.jDz],ngContentSelectors:O,decls:4,vars:4,consts:[["class","gridster-column",3,"ngStyle",4,"ngFor","ngForOf"],["class","gridster-row",3,"ngStyle",4,"ngFor","ngForOf"],[1,"gridster-preview",3,"gridRenderer","previewStyle$"],[1,"gridster-column",3,"ngStyle"],[1,"gridster-row",3,"ngStyle"]],template:function(i,s){1&i&&(r.F$t(),r.YNc(0,it,1,1,"div",0),r.YNc(1,st,1,1,"div",1),r.Hsn(2),r._UZ(3,"gridster-preview",2)),2&i&&(r.Q6J("ngForOf",s.gridColumns),r.xp6(1),r.Q6J("ngForOf",s.gridRows),r.xp6(2),r.Q6J("gridRenderer",s.gridRenderer)("previewStyle$",s.previewStyle$))},dependencies:[E.sg,E.PC,ft],styles:["gridster{position:relative;box-sizing:border-box;background:grey;width:100%;height:100%;-webkit-user-select:none;user-select:none;display:block}gridster.fit{overflow-x:hidden;overflow-y:hidden}gridster.scrollVertical{overflow-x:hidden;overflow-y:auto}gridster.scrollHorizontal{overflow-x:auto;overflow-y:hidden}gridster.fixed{overflow:auto}gridster.mobile{overflow-x:hidden;overflow-y:auto}gridster.mobile gridster-item{position:relative}gridster.gridSize{height:initial;width:initial}gridster.gridSize.fit{height:100%;width:100%}gridster .gridster-column,gridster .gridster-row{position:absolute;display:none;transition:.3s;box-sizing:border-box}gridster.display-grid .gridster-column,gridster.display-grid .gridster-row{display:block}gridster .gridster-column{border-left:1px solid white;border-right:1px solid white}gridster .gridster-row{border-top:1px solid white;border-bottom:1px solid white}\n"],encapsulation:2})}return h})();class G{constructor(e){this.iteration=0,this.pushedItems=[],this.pushedItemsTemp=[],this.pushedItemsTempPath=[],this.pushedItemsPath=[],this.gridsterItem=e,this.gridster=e.gridster,this.tryPattern={fromEast:[this.tryWest,this.trySouth,this.tryNorth,this.tryEast],fromWest:[this.tryEast,this.trySouth,this.tryNorth,this.tryWest],fromNorth:[this.trySouth,this.tryEast,this.tryWest,this.tryNorth],fromSouth:[this.tryNorth,this.tryEast,this.tryWest,this.trySouth]},this.fromSouth="fromSouth",this.fromNorth="fromNorth",this.fromEast="fromEast",this.fromWest="fromWest"}destroy(){this.gridster=this.gridsterItem=null}pushItems(e,t){if(this.gridster.$options.pushItems&&!t){this.pushedItemsOrder=[],this.iteration=0;const i=this.push(this.gridsterItem,e);return i||this.restoreTempItems(),this.pushedItemsOrder=[],this.pushedItemsTemp=[],this.pushedItemsTempPath=[],i}return!1}restoreTempItems(){let e=this.pushedItemsTemp.length-1;for(;e>-1;e--)this.removeFromTempPushed(this.pushedItemsTemp[e])}restoreItems(){let e=0;const t=this.pushedItems.length;let i;for(;e<t;e++)i=this.pushedItems[e],i.$item.x=i.item.x||0,i.$item.y=i.item.y||0,i.setSize();this.pushedItems=[],this.pushedItemsPath=[]}setPushedItems(){let e=0;const t=this.pushedItems.length;let i;for(;e<t;e++)i=this.pushedItems[e],i.checkItemChanges(i.$item,i.item);this.pushedItems=[],this.pushedItemsPath=[]}checkPushBack(){let e=this.pushedItems.length-1,t=!1;for(;e>-1;e--)this.checkPushedItem(this.pushedItems[e],e)&&(t=!0);t&&this.checkPushBack()}push(e,t){if(this.iteration>100)return console.warn("max iteration reached"),!1;if(this.gridster.checkGridCollision(e.$item)||""===t)return!1;const i=this.gridster.findItemsWithItem(e.$item),s=t===this.fromNorth||t===this.fromWest;i.sort((d,g)=>s?g.$item.y-d.$item.y||g.$item.x-d.$item.x:d.$item.y-g.$item.y||d.$item.x-g.$item.x);let n,o=0,l=!0;const a=[];for(;o<i.length;o++){if(n=i[o],n===this.gridsterItem)continue;if(!n.canBeDragged()){l=!1;break}const d=this.pushedItemsTemp.indexOf(n);if(d>-1&&this.pushedItemsTempPath[d].length>10){l=!1;break}if(this.tryPattern[t][0].call(this,n,e))this.pushedItemsOrder.push(n),a.push(n);else if(this.tryPattern[t][1].call(this,n,e))this.pushedItemsOrder.push(n),a.push(n);else if(this.tryPattern[t][2].call(this,n,e))this.pushedItemsOrder.push(n),a.push(n);else{if(!this.tryPattern[t][3].call(this,n,e)){l=!1;break}this.pushedItemsOrder.push(n),a.push(n)}}if(!l&&(o=this.pushedItemsOrder.lastIndexOf(a[0]),o>-1)){let d=this.pushedItemsOrder.length-1;for(;d>=o;d--)n=this.pushedItemsOrder[d],this.pushedItemsOrder.pop(),this.removeFromTempPushed(n),this.removeFromPushedItem(n)}return this.iteration++,l}trySouth(e,t){return!!this.gridster.$options.pushDirections.south&&(this.addToTempPushed(e),e.$item.y=t.$item.y+t.$item.rows,this.push(e,this.fromNorth)?(e.setSize(),this.addToPushed(e),!0):(this.removeFromTempPushed(e),!1))}tryNorth(e,t){return!!this.gridster.$options.pushDirections.north&&(this.addToTempPushed(e),e.$item.y=t.$item.y-e.$item.rows,this.push(e,this.fromSouth)?(e.setSize(),this.addToPushed(e),!0):(this.removeFromTempPushed(e),!1))}tryEast(e,t){return!!this.gridster.$options.pushDirections.east&&(this.addToTempPushed(e),e.$item.x=t.$item.x+t.$item.cols,this.push(e,this.fromWest)?(e.setSize(),this.addToPushed(e),!0):(this.removeFromTempPushed(e),!1))}tryWest(e,t){return!!this.gridster.$options.pushDirections.west&&(this.addToTempPushed(e),e.$item.x=t.$item.x-e.$item.cols,this.push(e,this.fromEast)?(e.setSize(),this.addToPushed(e),!0):(this.removeFromTempPushed(e),!1))}addToTempPushed(e){let t=this.pushedItemsTemp.indexOf(e);-1===t&&(t=this.pushedItemsTemp.push(e)-1,this.pushedItemsTempPath[t]=[]),this.pushedItemsTempPath[t].push({x:e.$item.x,y:e.$item.y})}removeFromTempPushed(e){const t=this.pushedItemsTemp.indexOf(e),i=this.pushedItemsTempPath[t].pop();i&&(e.$item.x=i.x,e.$item.y=i.y,e.setSize(),this.pushedItemsTempPath[t].length||(this.pushedItemsTemp.splice(t,1),this.pushedItemsTempPath.splice(t,1)))}addToPushed(e){if(this.pushedItems.indexOf(e)<0)this.pushedItems.push(e),this.pushedItemsPath.push([{x:e.item.x||0,y:e.item.y||0},{x:e.$item.x,y:e.$item.y}]);else{const t=this.pushedItems.indexOf(e);this.pushedItemsPath[t].push({x:e.$item.x,y:e.$item.y})}}removeFromPushed(e){e>-1&&(this.pushedItems.splice(e,1),this.pushedItemsPath.splice(e,1))}removeFromPushedItem(e){const t=this.pushedItems.indexOf(e);t>-1&&(this.pushedItemsPath[t].pop(),this.pushedItemsPath.length||(this.pushedItems.splice(t,1),this.pushedItemsPath.splice(t,1)))}checkPushedItem(e,t){const i=this.pushedItemsPath[t];let o,n,l,s=i.length-2,a=!1;for(;s>-1;s--)o=i[s],n=e.$item.x,l=e.$item.y,e.$item.x=o.x,e.$item.y=o.y,this.gridster.findItemWithItem(e.$item)?(e.$item.x=n,e.$item.y=l):(e.setSize(),i.splice(s+1,i.length-s-1),a=!0);return i.length<2&&this.removeFromPushed(t),a}}const X=50;let $,k,C,R,P,M,_;function N(h,e,t,i,s,o,n,l,a,d){S=h.$options.scrollSensitivity,b=h.$options.scrollSpeed,$=h.el,k=a,C=d;const g=$.offsetWidth,I=$.scrollLeft,x=$.scrollTop,y=t-x,v=$.offsetHeight+x-t-s,{clientX:z,clientY:W}=o;if(!h.$options.disableScrollVertical)if(n.clientY<W&&v<S){if(Q(),k&&C&&!C.south||_)return;_=A(1,l,n)}else if(n.clientY>W&&x>0&&y<S){if(Z(),k&&C&&!C.north||M)return;M=A(-1,l,n)}else n.clientY!==W&&F();const bt=e-I;if(!h.$options.disableScrollHorizontal)if(n.clientX<z&&I+g-e-i<=S){if(V(),k&&C&&!C.east||R)return;R=U(1,l,n)}else if(n.clientX>z&&I>0&&bt<S){if(K(),k&&C&&!C.west||P)return;P=U(-1,l,n)}else n.clientX!==z&&D()}function A(h,e,t){let i=t.clientY;return window.setInterval(()=>{(!$||-1===h&&$.scrollTop-b<0)&&F(),$.scrollTop+=h*b,i+=h*b,e({clientX:t.clientX,clientY:i})},X)}function U(h,e,t){let i=t.clientX;return window.setInterval(()=>{(!$||-1===h&&$.scrollLeft-b<0)&&D(),$.scrollLeft+=h*b,i+=h*b,e({clientX:i,clientY:t.clientY})},X)}function J(){D(),F(),$=null}function D(){K(),V()}function F(){Q(),Z()}function K(){R&&(clearInterval(R),R=0)}function V(){P&&(clearInterval(P),P=0)}function Z(){_&&(clearInterval(_),_=0)}function Q(){M&&(clearInterval(M),M=0)}class yt{constructor(e){this.gridsterItem=e,this.gridster=e.gridster}destroy(){this.gridster=this.gridsterItem=this.swapedItem=null}swapItems(){this.gridster.$options.swap&&(this.checkSwapBack(),this.checkSwap(this.gridsterItem))}checkSwapBack(){if(this.swapedItem){const e=this.swapedItem.$item.x,t=this.swapedItem.$item.y;this.swapedItem.$item.x=this.swapedItem.item.x||0,this.swapedItem.$item.y=this.swapedItem.item.y||0,this.gridster.checkCollision(this.swapedItem.$item)?(this.swapedItem.$item.x=e,this.swapedItem.$item.y=t):(this.swapedItem.setSize(),this.gridsterItem.$item.x=this.gridsterItem.item.x||0,this.gridsterItem.$item.y=this.gridsterItem.item.y||0,this.swapedItem=void 0)}}restoreSwapItem(){this.swapedItem&&(this.swapedItem.$item.x=this.swapedItem.item.x||0,this.swapedItem.$item.y=this.swapedItem.item.y||0,this.swapedItem.setSize(),this.swapedItem=void 0)}setSwapItem(){this.swapedItem&&(this.swapedItem.checkItemChanges(this.swapedItem.$item,this.swapedItem.item),this.swapedItem=void 0)}checkSwap(e){let t;if(t=this.gridster.$options.swapWhileDragging?this.gridster.checkCollisionForSwaping(e.$item):this.gridster.checkCollision(e.$item),t&&!0!==t&&t.canBeDragged()){const i=t,s=i.$item.x,o=i.$item.y,n=e.$item.x,l=e.$item.y,a=n-s,d=l-o;i.$item.x=e.item.x-a,i.$item.y=e.item.y-d,e.$item.x=i.item.x+a,e.$item.y=i.item.y+d,this.gridster.checkCollision(i.$item)||this.gridster.checkCollision(e.$item)?(e.$item.x=n,e.$item.y=l,i.$item.x=s,i.$item.y=o):(i.setSize(),this.swapedItem=i,this.gridster.$options.swapWhileDragging&&(this.gridsterItem.checkItemChanges(this.gridsterItem.$item,this.gridsterItem.item),this.setSwapItem()))}}}var w=function(h){return h.UP="UP",h.DOWN="DOWN",h.LEFT="LEFT",h.RIGHT="RIGHT",h}(w||{});class $t{constructor(e,t,i){this.zone=i,this.collision=!1,this.dragMove=s=>{s.stopPropagation(),s.preventDefault(),p.checkTouchEvent(s);let o=this.getDirections(s);this.gridster.options.enableBoundaryControl&&(o.includes(w.UP)&&this.gridsterItem.el.getBoundingClientRect().top<this.gridster.el.getBoundingClientRect().top+(this.outerMarginTop??this.margin)&&(o=o.filter(n=>n!=w.UP),s=new MouseEvent(s.type,{clientX:s.clientX,clientY:this.lastMouse.clientY})),o.includes(w.LEFT)&&this.gridsterItem.el.getBoundingClientRect().left<this.gridster.el.getBoundingClientRect().left+(this.outerMarginLeft??this.margin)&&(o=o.filter(n=>n!=w.LEFT),s=new MouseEvent(s.type,{clientX:this.lastMouse.clientX,clientY:s.clientY})),o.includes(w.RIGHT)&&this.gridsterItem.el.getBoundingClientRect().right>this.gridster.el.getBoundingClientRect().right-(this.outerMarginRight??this.margin)&&(o=o.filter(n=>n!=w.RIGHT),s=new MouseEvent(s.type,{clientX:this.lastMouse.clientX,clientY:s.clientY})),o.includes(w.DOWN)&&this.gridsterItem.el.getBoundingClientRect().bottom>this.gridster.el.getBoundingClientRect().bottom-(this.outerMarginBottom??this.margin)&&(o=o.filter(n=>n!=w.DOWN),s=new MouseEvent(s.type,{clientX:s.clientX,clientY:this.lastMouse.clientY}))),o.length&&(this.offsetLeft=this.gridster.el.scrollLeft-this.gridster.el.offsetLeft,this.offsetTop=this.gridster.el.scrollTop-this.gridster.el.offsetTop,N(this.gridster,this.left,this.top,this.width,this.height,s,this.lastMouse,this.calculateItemPositionFromMousePosition),this.calculateItemPositionFromMousePosition(s))},this.calculateItemPositionFromMousePosition=s=>{this.gridster.options.scale?this.calculateItemPositionWithScale(s,this.gridster.options.scale):this.calculateItemPositionWithoutScale(s),this.calculateItemPosition(),this.lastMouse.clientX=s.clientX,this.lastMouse.clientY=s.clientY,this.zone.run(()=>{this.gridster.updateGrid()})},this.dragStop=s=>{s.stopPropagation(),s.preventDefault(),J(),this.cancelOnBlur(),this.mousemove(),this.mouseup(),this.mouseleave(),this.touchmove(),this.touchend(),this.touchcancel(),this.gridsterItem.renderer.removeClass(this.gridsterItem.el,"gridster-item-moving"),this.gridster.dragInProgress=!1,this.gridster.updateGrid(),this.path=[],this.gridster.options.draggable&&this.gridster.options.draggable.stop?Promise.resolve(this.gridster.options.draggable.stop(this.gridsterItem.item,this.gridsterItem,s)).then(this.makeDrag,this.cancelDrag):this.makeDrag(),setTimeout(()=>{this.gridster&&(this.gridster.movingItem=null,this.gridster.previewStyle(!0))})},this.cancelDrag=()=>{this.gridsterItem.$item.x=this.gridsterItem.item.x||0,this.gridsterItem.$item.y=this.gridsterItem.item.y||0,this.gridsterItem.setSize(),this.push&&this.push.restoreItems(),this.swap&&this.swap.restoreSwapItem(),this.push&&(this.push.destroy(),this.push=null),this.swap&&(this.swap.destroy(),this.swap=null)},this.makeDrag=()=>{this.gridster.$options.draggable.dropOverItems&&this.gridster.options.draggable&&this.gridster.options.draggable.dropOverItemsCallback&&this.collision&&!0!==this.collision&&this.collision.$item&&this.gridster.options.draggable.dropOverItemsCallback(this.gridsterItem.item,this.collision.item,this.gridster),this.collision=!1,this.gridsterItem.setSize(),this.gridsterItem.checkItemChanges(this.gridsterItem.$item,this.gridsterItem.item),this.push&&this.push.setPushedItems(),this.swap&&this.swap.setSwapItem(),this.push&&(this.push.destroy(),this.push=null),this.swap&&(this.swap.destroy(),this.swap=null)},this.dragStartDelay=s=>{if(s.target.classList.contains("gridster-item-resizable-handler")||p.checkContentClassForEvent(this.gridster,s))return;if(p.checkTouchEvent(s),!this.gridster.$options.draggable.delayStart)return void this.dragStart(s);const n=setTimeout(()=>{this.dragStart(s),y()},this.gridster.$options.draggable.delayStart),l=this.gridsterItem.renderer.listen("document","mouseup",y),a=this.gridsterItem.renderer.listen("document","mouseleave",y),d=this.gridsterItem.renderer.listen("window","blur",y),g=this.gridsterItem.renderer.listen("document","touchmove",function x(v){p.checkTouchEvent(v),(Math.abs(v.clientX-s.clientX)>9||Math.abs(v.clientY-s.clientY)>9)&&y()}),f=this.gridsterItem.renderer.listen("document","touchend",y),I=this.gridsterItem.renderer.listen("document","touchcancel",y);function y(){clearTimeout(n),d(),l(),a(),g(),f(),I()}},this.gridsterItem=e,this.gridster=t,this.lastMouse={clientX:0,clientY:0},this.path=[]}destroy(){this.gridster.previewStyle&&this.gridster.previewStyle(!0),this.gridsterItem=this.gridster=this.collision=null,this.mousedown&&(this.mousedown(),this.touchstart())}dragStart(e){e.which&&1!==e.which||(this.gridster.options.draggable&&this.gridster.options.draggable.start&&this.gridster.options.draggable.start(this.gridsterItem.item,this.gridsterItem,e),e.stopPropagation(),e.preventDefault(),this.zone.runOutsideAngular(()=>{this.mousemove=this.gridsterItem.renderer.listen("document","mousemove",this.dragMove),this.touchmove=this.gridster.renderer.listen(this.gridster.el,"touchmove",this.dragMove)}),this.mouseup=this.gridsterItem.renderer.listen("document","mouseup",this.dragStop),this.mouseleave=this.gridsterItem.renderer.listen("document","mouseleave",this.dragStop),this.cancelOnBlur=this.gridsterItem.renderer.listen("window","blur",this.dragStop),this.touchend=this.gridsterItem.renderer.listen("document","touchend",this.dragStop),this.touchcancel=this.gridsterItem.renderer.listen("document","touchcancel",this.dragStop),this.gridsterItem.renderer.addClass(this.gridsterItem.el,"gridster-item-moving"),this.margin=this.gridster.$options.margin,this.outerMarginTop=this.gridster.$options.outerMarginTop,this.outerMarginRight=this.gridster.$options.outerMarginRight,this.outerMarginBottom=this.gridster.$options.outerMarginBottom,this.outerMarginLeft=this.gridster.$options.outerMarginLeft,this.offsetLeft=this.gridster.el.scrollLeft-this.gridster.el.offsetLeft,this.offsetTop=this.gridster.el.scrollTop-this.gridster.el.offsetTop,this.left=this.gridsterItem.left-this.margin,this.top=this.gridsterItem.top-this.margin,this.originalClientX=e.clientX,this.originalClientY=e.clientY,this.width=this.gridsterItem.width,this.height=this.gridsterItem.height,this.diffLeft=this.gridster.$options.dirType===u.RTL?e.clientX-this.gridster.el.scrollWidth+this.gridsterItem.left:e.clientX+this.offsetLeft-this.margin-this.left,this.diffTop=e.clientY+this.offsetTop-this.margin-this.top,this.gridster.movingItem=this.gridsterItem.$item,this.gridster.previewStyle(!0),this.push=new G(this.gridsterItem),this.swap=new yt(this.gridsterItem),this.gridster.dragInProgress=!0,this.gridster.updateGrid(),this.path.push({x:this.gridsterItem.item.x||0,y:this.gridsterItem.item.y||0}))}calculateItemPositionWithScale(e,t){this.left=this.gridster.$options.dirType===u.RTL?this.gridster.el.scrollWidth-this.originalClientX+(e.clientX-this.originalClientX)/t+this.diffLeft:this.originalClientX+(e.clientX-this.originalClientX)/t+this.offsetLeft-this.diffLeft,this.top=this.originalClientY+(e.clientY-this.originalClientY)/t+this.offsetTop-this.diffTop}calculateItemPositionWithoutScale(e){this.left=this.gridster.$options.dirType===u.RTL?this.gridster.el.scrollWidth-e.clientX+this.diffLeft:e.clientX+this.offsetLeft-this.diffLeft,this.top=e.clientY+this.offsetTop-this.diffTop}calculateItemPosition(){if(this.gridster.movingItem=this.gridsterItem.$item,this.positionX=this.gridster.pixelsToPositionX(this.left,Math.round),this.positionY=this.gridster.pixelsToPositionY(this.top,Math.round),this.positionXBackup=this.gridsterItem.$item.x,this.positionYBackup=this.gridsterItem.$item.y,this.gridsterItem.$item.x=this.positionX,this.gridster.checkGridCollision(this.gridsterItem.$item)&&(this.gridsterItem.$item.x=this.positionXBackup),this.gridsterItem.$item.y=this.positionY,this.gridster.checkGridCollision(this.gridsterItem.$item)&&(this.gridsterItem.$item.y=this.positionYBackup),this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer,this.gridsterItem.el,this.left,this.top),this.positionXBackup!==this.gridsterItem.$item.x||this.positionYBackup!==this.gridsterItem.$item.y){const e=this.path[this.path.length-1];let t="";e.x<this.gridsterItem.$item.x?t=this.push.fromWest:e.x>this.gridsterItem.$item.x?t=this.push.fromEast:e.y<this.gridsterItem.$item.y?t=this.push.fromNorth:e.y>this.gridsterItem.$item.y&&(t=this.push.fromSouth),this.push.pushItems(t,this.gridster.$options.disablePushOnDrag),this.swap.swapItems(),this.collision=this.gridster.checkCollision(this.gridsterItem.$item),this.collision?(this.gridsterItem.$item.x=this.positionXBackup,this.gridsterItem.$item.y=this.positionYBackup,this.gridster.$options.draggable.dropOverItems&&!0!==this.collision&&this.collision.$item&&(this.gridster.movingItem=null)):this.path.push({x:this.gridsterItem.$item.x,y:this.gridsterItem.$item.y}),this.push.checkPushBack()}else this.collision=!1;this.gridster.previewStyle(!0)}toggle(){const e=this.gridsterItem.canBeDragged();!this.enabled&&e?(this.enabled=!this.enabled,this.mousedown=this.gridsterItem.renderer.listen(this.gridsterItem.el,"mousedown",this.dragStartDelay),this.touchstart=this.gridsterItem.renderer.listen(this.gridsterItem.el,"touchstart",this.dragStartDelay)):this.enabled&&!e&&(this.enabled=!this.enabled,this.mousedown(),this.touchstart())}getDirections(e){const t=[];return 0===this.lastMouse.clientX&&0===this.lastMouse.clientY&&(this.lastMouse.clientY=e.clientY,this.lastMouse.clientX=e.clientX),this.lastMouse.clientY>e.clientY&&t.push(w.UP),this.lastMouse.clientY<e.clientY&&t.push(w.DOWN),this.lastMouse.clientX<e.clientX&&t.push(w.RIGHT),this.lastMouse.clientX>e.clientX&&t.push(w.LEFT),t}}class It{constructor(e){this.pushedItems=[],this.pushedItemsPath=[],this.gridsterItem=e,this.gridster=e.gridster,this.tryPattern={fromEast:this.tryWest,fromWest:this.tryEast,fromNorth:this.trySouth,fromSouth:this.tryNorth},this.fromSouth="fromSouth",this.fromNorth="fromNorth",this.fromEast="fromEast",this.fromWest="fromWest"}destroy(){this.gridster=this.gridsterItem=null}pushItems(e){return!!this.gridster.$options.pushResizeItems&&this.push(this.gridsterItem,e)}restoreItems(){let e=0;const t=this.pushedItems.length;let i;for(;e<t;e++)i=this.pushedItems[e],i.$item.x=i.item.x||0,i.$item.y=i.item.y||0,i.$item.cols=i.item.cols||1,i.$item.row=i.item.row||1,i.setSize();this.pushedItems=[],this.pushedItemsPath=[]}setPushedItems(){let e=0;const t=this.pushedItems.length;let i;for(;e<t;e++)i=this.pushedItems[e],i.checkItemChanges(i.$item,i.item);this.pushedItems=[],this.pushedItemsPath=[]}checkPushBack(){let e=this.pushedItems.length-1,t=!1;for(;e>-1;e--)this.checkPushedItem(this.pushedItems[e],e)&&(t=!0);t&&this.checkPushBack()}push(e,t){const i=this.gridster.checkCollision(e.$item);if(i&&!0!==i&&i!==this.gridsterItem&&i.canBeResized()){if(this.tryPattern[t].call(this,i,e,t))return!0}else if(!1===i)return!0;return!1}trySouth(e,t,i){const s=e.$item.y,o=e.$item.rows;return e.$item.y=t.$item.y+t.$item.rows,e.$item.rows=o+s-e.$item.y,this.gridster.checkCollisionTwoItems(e.$item,t.$item)||this.gridster.checkGridCollision(e.$item)?(e.$item.y=s,e.$item.rows=o,!1):(e.setSize(),this.addToPushed(e),this.push(t,i),!0)}tryNorth(e,t,i){const s=e.$item.rows;return e.$item.rows=t.$item.y-e.$item.y,this.gridster.checkCollisionTwoItems(e.$item,t.$item)||this.gridster.checkGridCollision(e.$item)?(e.$item.rows=s,!1):(e.setSize(),this.addToPushed(e),this.push(t,i),!0)}tryEast(e,t,i){const s=e.$item.x,o=e.$item.cols;return e.$item.x=t.$item.x+t.$item.cols,e.$item.cols=o+s-e.$item.x,this.gridster.checkCollisionTwoItems(e.$item,t.$item)||this.gridster.checkGridCollision(e.$item)?(e.$item.x=s,e.$item.cols=o,!1):(e.setSize(),this.addToPushed(e),this.push(t,i),!0)}tryWest(e,t,i){const s=e.$item.cols;return e.$item.cols=t.$item.x-e.$item.x,this.gridster.checkCollisionTwoItems(e.$item,t.$item)||this.gridster.checkGridCollision(e.$item)?(e.$item.cols=s,!1):(e.setSize(),this.addToPushed(e),this.push(t,i),!0)}addToPushed(e){if(this.pushedItems.indexOf(e)<0)this.pushedItems.push(e),this.pushedItemsPath.push([{x:e.item.x||0,y:e.item.y||0,cols:e.item.cols||0,rows:e.item.rows||0},{x:e.$item.x,y:e.$item.y,cols:e.$item.cols,rows:e.$item.rows}]);else{const t=this.pushedItems.indexOf(e);this.pushedItemsPath[t].push({x:e.$item.x,y:e.$item.y,cols:e.$item.cols,rows:e.$item.rows})}}removeFromPushed(e){e>-1&&(this.pushedItems.splice(e,1),this.pushedItemsPath.splice(e,1))}checkPushedItem(e,t){const i=this.pushedItemsPath[t];let o,n,l,a,d,s=i.length-2;for(;s>-1;s--)o=i[s],n=e.$item.x,l=e.$item.y,a=e.$item.cols,d=e.$item.rows,e.$item.x=o.x,e.$item.y=o.y,e.$item.cols=o.cols,e.$item.rows=o.rows,this.gridster.findItemWithItem(e.$item)?(e.$item.x=n,e.$item.y=l,e.$item.cols=a,e.$item.rows=d):(e.setSize(),i.splice(s+1,i.length-1-s));return i.length<2&&(this.removeFromPushed(t),!0)}}class Ct{constructor(e,t,i){this.zone=i,this.directionFunction=null,this.dragMove=s=>{if(null===this.directionFunction)throw new Error("The `directionFunction` has not been set before calling `dragMove`.");s.stopPropagation(),s.preventDefault(),p.checkTouchEvent(s),this.offsetTop=this.gridster.el.scrollTop-this.gridster.el.offsetTop,this.offsetLeft=this.gridster.el.scrollLeft-this.gridster.el.offsetLeft,N(this.gridster,this.left,this.top,this.width,this.height,s,this.lastMouse,this.directionFunction,!0,this.resizeEventScrollType);const o=this.gridster.options.scale||1;this.directionFunction({clientX:this.originalClientX+(s.clientX-this.originalClientX)/o,clientY:this.originalClientY+(s.clientY-this.originalClientY)/o}),this.lastMouse.clientX=s.clientX,this.lastMouse.clientY=s.clientY,this.zone.run(()=>{this.gridster.updateGrid()})},this.dragStop=s=>{s.stopPropagation(),s.preventDefault(),J(),this.mousemove(),this.mouseup(),this.mouseleave(),this.cancelOnBlur(),this.touchmove(),this.touchend(),this.touchcancel(),this.gridster.dragInProgress=!1,this.gridster.updateGrid(),this.gridster.options.resizable&&this.gridster.options.resizable.stop?Promise.resolve(this.gridster.options.resizable.stop(this.gridsterItem.item,this.gridsterItem,s)).then(this.makeResize,this.cancelResize):this.makeResize(),setTimeout(()=>{this.gridsterItem.renderer.removeClass(this.gridsterItem.el,"gridster-item-resizing"),this.gridster&&(this.gridster.movingItem=null,this.gridster.previewStyle())})},this.cancelResize=()=>{this.gridsterItem.$item.cols=this.gridsterItem.item.cols||1,this.gridsterItem.$item.rows=this.gridsterItem.item.rows||1,this.gridsterItem.$item.x=this.gridsterItem.item.x||0,this.gridsterItem.$item.y=this.gridsterItem.item.y||0,this.gridsterItem.setSize(),this.push.restoreItems(),this.pushResize.restoreItems(),this.push.destroy(),this.push=null,this.pushResize.destroy(),this.pushResize=null},this.makeResize=()=>{this.gridsterItem.setSize(),this.gridsterItem.checkItemChanges(this.gridsterItem.$item,this.gridsterItem.item),this.push.setPushedItems(),this.pushResize.setPushedItems(),this.push.destroy(),this.push=null,this.pushResize.destroy(),this.pushResize=null},this.handleNorth=s=>{if(this.top=s.clientY+this.offsetTop-this.diffTop,this.height=this.bottom-this.top,this.minHeight>this.height?(this.height=this.minHeight,this.top=this.bottom-this.minHeight):this.gridster.options.enableBoundaryControl&&(this.top=Math.max(0,this.top),this.height=this.bottom-this.top),this.newPosition=this.gridster.pixelsToPositionY(this.top+(this.gridster.options.pushItems?this.margin:0),Math.floor),this.gridsterItem.$item.y!==this.newPosition){if(this.itemBackup[1]=this.gridsterItem.$item.y,this.itemBackup[3]=this.gridsterItem.$item.rows,this.gridsterItem.$item.rows+=this.gridsterItem.$item.y-this.newPosition,this.gridsterItem.$item.y=this.newPosition,this.pushResize.pushItems(this.pushResize.fromSouth),this.push.pushItems(this.push.fromSouth,this.gridster.$options.disablePushOnResize),this.gridster.checkCollision(this.gridsterItem.$item))return this.gridsterItem.$item.y=this.itemBackup[1],this.gridsterItem.$item.rows=this.itemBackup[3],this.top=this.gridster.positionYToPixels(this.gridsterItem.$item.y),this.setItemTop(this.gridster.positionYToPixels(this.gridsterItem.$item.y)),void this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows)-this.margin);this.gridster.previewStyle(),this.pushResize.checkPushBack(),this.push.checkPushBack()}this.setItemTop(this.top),this.setItemHeight(this.height)},this.handleWest=s=>{if(this.left=(this.gridster.$options.dirType===u.RTL?this.originalClientX+(this.originalClientX-s.clientX):s.clientX)+this.offsetLeft-this.diffLeft,this.width=this.right-this.left,this.minWidth>this.width?(this.width=this.minWidth,this.left=this.right-this.minWidth):this.gridster.options.enableBoundaryControl&&(this.left=Math.max(0,this.left),this.width=this.right-this.left),this.newPosition=this.gridster.pixelsToPositionX(this.left+(this.gridster.options.pushItems?this.margin:0),Math.floor),this.gridsterItem.$item.x!==this.newPosition){if(this.itemBackup[0]=this.gridsterItem.$item.x,this.itemBackup[2]=this.gridsterItem.$item.cols,this.gridsterItem.$item.cols+=this.gridsterItem.$item.x-this.newPosition,this.gridsterItem.$item.x=this.newPosition,this.pushResize.pushItems(this.pushResize.fromEast),this.push.pushItems(this.push.fromEast,this.gridster.$options.disablePushOnResize),this.gridster.checkCollision(this.gridsterItem.$item))return this.gridsterItem.$item.x=this.itemBackup[0],this.gridsterItem.$item.cols=this.itemBackup[2],this.left=this.gridster.positionXToPixels(this.gridsterItem.$item.x),this.setItemLeft(this.gridster.positionXToPixels(this.gridsterItem.$item.x)),void this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols)-this.margin);this.gridster.previewStyle(),this.pushResize.checkPushBack(),this.push.checkPushBack()}this.setItemLeft(this.left),this.setItemWidth(this.width)},this.handleSouth=s=>{if(this.height=s.clientY+this.offsetTop-this.diffBottom-this.top,this.minHeight>this.height&&(this.height=this.minHeight),this.bottom=this.top+this.height,this.gridster.options.enableBoundaryControl){const n=this.outerMarginBottom??this.margin,l=this.gridster.el.getBoundingClientRect();this.bottom=Math.min(this.bottom,l.bottom-l.top-2*n),this.height=this.bottom-this.top}if(this.newPosition=this.gridster.pixelsToPositionY(this.bottom+(this.gridster.options.pushItems?0:this.margin),Math.ceil),this.gridsterItem.$item.y+this.gridsterItem.$item.rows!==this.newPosition){if(this.itemBackup[3]=this.gridsterItem.$item.rows,this.gridsterItem.$item.rows=this.newPosition-this.gridsterItem.$item.y,this.pushResize.pushItems(this.pushResize.fromNorth),this.push.pushItems(this.push.fromNorth,this.gridster.$options.disablePushOnResize),this.gridster.checkCollision(this.gridsterItem.$item))return this.gridsterItem.$item.rows=this.itemBackup[3],void this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows)-this.margin);this.gridster.previewStyle(),this.pushResize.checkPushBack(),this.push.checkPushBack()}this.setItemHeight(this.height)},this.handleEast=s=>{if(this.width=(this.gridster.$options.dirType===u.RTL?this.originalClientX+(this.originalClientX-s.clientX):s.clientX)+this.offsetLeft-this.diffRight-this.left,this.minWidth>this.width&&(this.width=this.minWidth),this.right=this.left+this.width,this.gridster.options.enableBoundaryControl){const l=this.outerMarginRight??this.margin,a=this.gridster.el.getBoundingClientRect();this.right=Math.min(this.right,a.right-a.left-2*l),this.width=this.right-this.left}if(this.newPosition=this.gridster.pixelsToPositionX(this.right+(this.gridster.options.pushItems?0:this.margin),Math.ceil),this.gridsterItem.$item.x+this.gridsterItem.$item.cols!==this.newPosition){if(this.itemBackup[2]=this.gridsterItem.$item.cols,this.gridsterItem.$item.cols=this.newPosition-this.gridsterItem.$item.x,this.pushResize.pushItems(this.pushResize.fromWest),this.push.pushItems(this.push.fromWest,this.gridster.$options.disablePushOnResize),this.gridster.checkCollision(this.gridsterItem.$item))return this.gridsterItem.$item.cols=this.itemBackup[2],void this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols)-this.margin);this.gridster.previewStyle(),this.pushResize.checkPushBack(),this.push.checkPushBack()}this.setItemWidth(this.width)},this.handleNorthWest=s=>{this.handleNorth(s),this.handleWest(s)},this.handleNorthEast=s=>{this.handleNorth(s),this.handleEast(s)},this.handleSouthWest=s=>{this.handleSouth(s),this.handleWest(s)},this.handleSouthEast=s=>{this.handleSouth(s),this.handleEast(s)},this.gridsterItem=e,this.gridster=t,this.lastMouse={clientX:0,clientY:0},this.itemBackup=[0,0,0,0],this.resizeEventScrollType={west:!1,east:!1,north:!1,south:!1}}destroy(){this.gridster?.previewStyle(),this.gridster=this.gridsterItem=null}dragStart(e){if(e.which&&1!==e.which)return;this.gridster.options.resizable&&this.gridster.options.resizable.start&&this.gridster.options.resizable.start(this.gridsterItem.item,this.gridsterItem,e),e.stopPropagation(),e.preventDefault(),this.zone.runOutsideAngular(()=>{this.mousemove=this.gridsterItem.renderer.listen("document","mousemove",this.dragMove),this.touchmove=this.gridster.renderer.listen(this.gridster.el,"touchmove",this.dragMove)}),this.mouseup=this.gridsterItem.renderer.listen("document","mouseup",this.dragStop),this.mouseleave=this.gridsterItem.renderer.listen("document","mouseleave",this.dragStop),this.cancelOnBlur=this.gridsterItem.renderer.listen("window","blur",this.dragStop),this.touchend=this.gridsterItem.renderer.listen("document","touchend",this.dragStop),this.touchcancel=this.gridsterItem.renderer.listen("document","touchcancel",this.dragStop),this.gridsterItem.renderer.addClass(this.gridsterItem.el,"gridster-item-resizing"),this.lastMouse.clientX=e.clientX,this.lastMouse.clientY=e.clientY,this.left=this.gridsterItem.left,this.top=this.gridsterItem.top,this.originalClientX=e.clientX,this.originalClientY=e.clientY,this.width=this.gridsterItem.width,this.height=this.gridsterItem.height,this.bottom=this.gridsterItem.top+this.gridsterItem.height,this.right=this.gridsterItem.left+this.gridsterItem.width,this.margin=this.gridster.$options.margin,this.outerMarginTop=this.gridster.$options.outerMarginTop,this.outerMarginRight=this.gridster.$options.outerMarginRight,this.outerMarginBottom=this.gridster.$options.outerMarginBottom,this.outerMarginLeft=this.gridster.$options.outerMarginLeft,this.offsetLeft=this.gridster.el.scrollLeft-this.gridster.el.offsetLeft,this.offsetTop=this.gridster.el.scrollTop-this.gridster.el.offsetTop,this.diffLeft=e.clientX+this.offsetLeft-this.left,this.diffRight=e.clientX+this.offsetLeft-this.right,this.diffTop=e.clientY+this.offsetTop-this.top,this.diffBottom=e.clientY+this.offsetTop-this.bottom,this.minHeight=this.gridster.positionYToPixels(this.gridsterItem.$item.minItemRows||this.gridster.$options.minItemRows)-this.margin,this.minWidth=this.gridster.positionXToPixels(this.gridsterItem.$item.minItemCols||this.gridster.$options.minItemCols)-this.margin,this.gridster.movingItem=this.gridsterItem.$item,this.gridster.previewStyle(),this.push=new G(this.gridsterItem),this.pushResize=new It(this.gridsterItem),this.gridster.dragInProgress=!0,this.gridster.updateGrid();const{classList:t}=e.target;t.contains("handle-n")?(this.resizeEventScrollType.north=!0,this.directionFunction=this.handleNorth):t.contains("handle-w")?this.gridster.$options.dirType===u.RTL?(this.resizeEventScrollType.east=!0,this.directionFunction=this.handleEast):(this.resizeEventScrollType.west=!0,this.directionFunction=this.handleWest):t.contains("handle-s")?(this.resizeEventScrollType.south=!0,this.directionFunction=this.handleSouth):t.contains("handle-e")?this.gridster.$options.dirType===u.RTL?(this.resizeEventScrollType.west=!0,this.directionFunction=this.handleWest):(this.resizeEventScrollType.east=!0,this.directionFunction=this.handleEast):t.contains("handle-nw")?this.gridster.$options.dirType===u.RTL?(this.resizeEventScrollType.north=!0,this.resizeEventScrollType.east=!0,this.directionFunction=this.handleNorthEast):(this.resizeEventScrollType.north=!0,this.resizeEventScrollType.west=!0,this.directionFunction=this.handleNorthWest):t.contains("handle-ne")?this.gridster.$options.dirType===u.RTL?(this.resizeEventScrollType.north=!0,this.resizeEventScrollType.west=!0,this.directionFunction=this.handleNorthWest):(this.resizeEventScrollType.north=!0,this.resizeEventScrollType.east=!0,this.directionFunction=this.handleNorthEast):t.contains("handle-sw")?this.gridster.$options.dirType===u.RTL?(this.resizeEventScrollType.south=!0,this.resizeEventScrollType.east=!0,this.directionFunction=this.handleSouthEast):(this.resizeEventScrollType.south=!0,this.resizeEventScrollType.west=!0,this.directionFunction=this.handleSouthWest):t.contains("handle-se")&&(this.gridster.$options.dirType===u.RTL?(this.resizeEventScrollType.south=!0,this.resizeEventScrollType.west=!0,this.directionFunction=this.handleSouthWest):(this.resizeEventScrollType.south=!0,this.resizeEventScrollType.east=!0,this.directionFunction=this.handleSouthEast))}toggle(){this.resizeEnabled=this.gridsterItem.canBeResized(),this.resizableHandles=this.gridsterItem.getResizableHandles()}dragStartDelay(e){if(p.checkTouchEvent(e),!this.gridster.$options.resizable.delayStart)return void this.dragStart(e);const t=setTimeout(()=>{this.dragStart(e),g()},this.gridster.$options.resizable.delayStart),{cancelMouse:i,cancelMouseLeave:s,cancelOnBlur:o,cancelTouchMove:n,cancelTouchEnd:l,cancelTouchCancel:a}=this.zone.runOutsideAngular(()=>({cancelMouse:this.gridsterItem.renderer.listen("document","mouseup",g),cancelMouseLeave:this.gridsterItem.renderer.listen("document","mouseleave",g),cancelOnBlur:this.gridsterItem.renderer.listen("window","blur",g),cancelTouchMove:this.gridsterItem.renderer.listen("document","touchmove",d),cancelTouchEnd:this.gridsterItem.renderer.listen("document","touchend",g),cancelTouchCancel:this.gridsterItem.renderer.listen("document","touchcancel",g)}));function d(f){p.checkTouchEvent(f),(Math.abs(f.clientX-e.clientX)>9||Math.abs(f.clientY-e.clientY)>9)&&g()}function g(){clearTimeout(t),o(),i(),s(),n(),l(),a()}}setItemTop(e){this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer,this.gridsterItem.el,this.left,e)}setItemLeft(e){this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer,this.gridsterItem.el,e,this.top)}setItemHeight(e){this.gridsterItem.renderer.setStyle(this.gridsterItem.el,"height",e+"px")}setItemWidth(e){this.gridsterItem.renderer.setStyle(this.gridsterItem.el,"width",e+"px")}}let xt=(()=>{class h{get zIndex(){return this.getLayerIndex()+this.gridster.$options.baseLayerIndex}constructor(t,i,s,o){this.renderer=s,this.zone=o,this.itemInit=new r.vpe,this.itemChange=new r.vpe,this.itemResize=new r.vpe,this.el=t.nativeElement,this.$item={cols:-1,rows:-1,x:-1,y:-1},this.gridster=i,this.drag=new $t(this,i,this.zone),this.resize=new Ct(this,i,this.zone)}ngOnInit(){this.gridster.addItem(this)}ngOnChanges(t){t.item&&(this.updateOptions(),this.init||this.gridster.calculateLayout$.next()),t.item&&t.item.previousValue&&this.setSize()}updateOptions(){this.$item=p.merge(this.$item,this.item,{cols:void 0,rows:void 0,x:void 0,y:void 0,layerIndex:void 0,dragEnabled:void 0,resizeEnabled:void 0,compactEnabled:void 0,maxItemRows:void 0,minItemRows:void 0,maxItemCols:void 0,minItemCols:void 0,maxItemArea:void 0,minItemArea:void 0,resizableHandles:{s:void 0,e:void 0,n:void 0,w:void 0,se:void 0,ne:void 0,sw:void 0,nw:void 0}})}ngOnDestroy(){this.gridster.removeItem(this),this.drag.destroy(),this.resize.destroy(),this.gridster=this.drag=this.resize=null}setSize(){this.renderer.setStyle(this.el,"display",this.notPlaced?"":"block"),this.gridster.gridRenderer.updateItem(this.el,this.$item,this.renderer),this.updateItemSize()}updateItemSize(){const i=this.$item.x*this.gridster.curColWidth,s=this.$item.cols*this.gridster.curColWidth-this.gridster.$options.margin,o=this.$item.rows*this.gridster.curRowHeight-this.gridster.$options.margin;this.top=this.$item.y*this.gridster.curRowHeight,this.left=i,!this.init&&s>0&&o>0&&(this.init=!0,this.item.initCallback&&this.item.initCallback(this.item,this),this.gridster.options.itemInitCallback&&this.gridster.options.itemInitCallback(this.item,this),this.itemInit.next({item:this.item,itemComponent:this}),this.gridster.$options.scrollToNewItems&&this.el.scrollIntoView(!1)),(s!==this.width||o!==this.height)&&(this.width=s,this.height=o,this.gridster.options.itemResizeCallback&&this.gridster.options.itemResizeCallback(this.item,this),this.itemResize.next({item:this.item,itemComponent:this}))}itemChanged(){this.gridster.options.itemChangeCallback&&this.gridster.options.itemChangeCallback(this.item,this),this.itemChange.next({item:this.item,itemComponent:this})}checkItemChanges(t,i){t.rows===i.rows&&t.cols===i.cols&&t.x===i.x&&t.y===i.y||(this.gridster.checkCollision(this.$item)?(this.$item.x=i.x||0,this.$item.y=i.y||0,this.$item.cols=i.cols||1,this.$item.rows=i.rows||1,this.setSize()):(this.item.cols=this.$item.cols,this.item.rows=this.$item.rows,this.item.x=this.$item.x,this.item.y=this.$item.y,this.gridster.calculateLayout$.next(),this.itemChanged()))}canBeDragged(){const t=this.gridster.$options.draggable.enabled;return!this.gridster.mobile&&t&&(void 0===this.$item.dragEnabled?t:this.$item.dragEnabled)}canBeResized(){const t=this.gridster.$options.resizable.enabled;return!this.gridster.mobile&&t&&(void 0===this.$item.resizeEnabled?t:this.$item.resizeEnabled)}getResizableHandles(){const t=this.gridster.$options.resizable.handles,i=this.$item.resizableHandles;return void 0===i?t:{...t,...i}}bringToFront(t){if(t&&t<=0)return;const i=this.getLayerIndex(),s=this.gridster.$options.maxLayerIndex;if(i<s){const o=t?i+t:s;this.item.layerIndex=this.$item.layerIndex=o>s?s:o}}sendToBack(t){if(t&&t<=0)return;const i=this.getLayerIndex();if(i>0){const s=t?i-t:0;this.item.layerIndex=this.$item.layerIndex=s<0?0:s}}getLayerIndex(){return void 0!==this.item.layerIndex?this.item.layerIndex:void 0!==this.gridster.$options.defaultLayerIndex?this.gridster.$options.defaultLayerIndex:0}static#t=this.\u0275fac=function(i){return new(i||h)(r.Y36(r.SBq),r.Y36(Y),r.Y36(r.Qsj),r.Y36(r.R0b))};static#e=this.\u0275cmp=r.Xpm({type:h,selectors:[["gridster-item"]],hostVars:2,hostBindings:function(i,s){2&i&&r.Udp("z-index",s.zIndex)},inputs:{item:"item"},outputs:{itemInit:"itemInit",itemChange:"itemChange",itemResize:"itemResize"},standalone:!0,features:[r.TTD,r.jDz],ngContentSelectors:O,decls:9,vars:8,consts:[["class","gridster-item-resizable-handler handle-s",3,"mousedown","touchstart",4,"ngIf"],["class","gridster-item-resizable-handler handle-e",3,"mousedown","touchstart",4,"ngIf"],["class","gridster-item-resizable-handler handle-n",3,"mousedown","touchstart",4,"ngIf"],["class","gridster-item-resizable-handler handle-w",3,"mousedown","touchstart",4,"ngIf"],["class","gridster-item-resizable-handler handle-se",3,"mousedown","touchstart",4,"ngIf"],["class","gridster-item-resizable-handler handle-ne",3,"mousedown","touchstart",4,"ngIf"],["class","gridster-item-resizable-handler handle-sw",3,"mousedown","touchstart",4,"ngIf"],["class","gridster-item-resizable-handler handle-nw",3,"mousedown","touchstart",4,"ngIf"],[1,"gridster-item-resizable-handler","handle-s",3,"mousedown","touchstart"],[1,"gridster-item-resizable-handler","handle-e",3,"mousedown","touchstart"],[1,"gridster-item-resizable-handler","handle-n",3,"mousedown","touchstart"],[1,"gridster-item-resizable-handler","handle-w",3,"mousedown","touchstart"],[1,"gridster-item-resizable-handler","handle-se",3,"mousedown","touchstart"],[1,"gridster-item-resizable-handler","handle-ne",3,"mousedown","touchstart"],[1,"gridster-item-resizable-handler","handle-sw",3,"mousedown","touchstart"],[1,"gridster-item-resizable-handler","handle-nw",3,"mousedown","touchstart"]],template:function(i,s){1&i&&(r.F$t(),r.Hsn(0),r.YNc(1,rt,1,0,"div",0),r.YNc(2,ot,1,0,"div",1),r.YNc(3,nt,1,0,"div",2),r.YNc(4,ht,1,0,"div",3),r.YNc(5,lt,1,0,"div",4),r.YNc(6,dt,1,0,"div",5),r.YNc(7,at,1,0,"div",6),r.YNc(8,ct,1,0,"div",7)),2&i&&(r.xp6(1),r.Q6J("ngIf",(null==s.resize.resizableHandles?null:s.resize.resizableHandles.s)&&s.resize.resizeEnabled),r.xp6(1),r.Q6J("ngIf",(null==s.resize.resizableHandles?null:s.resize.resizableHandles.e)&&s.resize.resizeEnabled),r.xp6(1),r.Q6J("ngIf",(null==s.resize.resizableHandles?null:s.resize.resizableHandles.n)&&s.resize.resizeEnabled),r.xp6(1),r.Q6J("ngIf",(null==s.resize.resizableHandles?null:s.resize.resizableHandles.w)&&s.resize.resizeEnabled),r.xp6(1),r.Q6J("ngIf",(null==s.resize.resizableHandles?null:s.resize.resizableHandles.se)&&s.resize.resizeEnabled),r.xp6(1),r.Q6J("ngIf",(null==s.resize.resizableHandles?null:s.resize.resizableHandles.ne)&&s.resize.resizeEnabled),r.xp6(1),r.Q6J("ngIf",(null==s.resize.resizableHandles?null:s.resize.resizableHandles.sw)&&s.resize.resizeEnabled),r.xp6(1),r.Q6J("ngIf",(null==s.resize.resizableHandles?null:s.resize.resizableHandles.nw)&&s.resize.resizeEnabled))},dependencies:[E.O5],styles:["gridster-item{box-sizing:border-box;z-index:1;position:absolute;overflow:hidden;transition:.3s;display:none;background:white;-webkit-user-select:text;user-select:text}gridster-item.gridster-item-moving{cursor:move}gridster-item.gridster-item-resizing,gridster-item.gridster-item-moving{transition:0s;z-index:2;box-shadow:0 0 5px 5px #0003,0 6px 10px #00000024,0 1px 18px #0000001f}.gridster-item-resizable-handler{position:absolute;z-index:2}.gridster-item-resizable-handler.handle-n{cursor:ns-resize;height:10px;right:0;top:0;left:0}.gridster-item-resizable-handler.handle-e{cursor:ew-resize;width:10px;bottom:0;right:0;top:0}.gridster-item-resizable-handler.handle-s{cursor:ns-resize;height:10px;right:0;bottom:0;left:0}.gridster-item-resizable-handler.handle-w{cursor:ew-resize;width:10px;left:0;top:0;bottom:0}.gridster-item-resizable-handler.handle-ne{cursor:ne-resize;width:10px;height:10px;right:0;top:0}.gridster-item-resizable-handler.handle-nw{cursor:nw-resize;width:10px;height:10px;left:0;top:0}.gridster-item-resizable-handler.handle-se{cursor:se-resize;width:0;height:0;right:0;bottom:0;border-style:solid;border-width:0 0 10px 10px;border-color:transparent}.gridster-item-resizable-handler.handle-sw{cursor:sw-resize;width:10px;height:10px;left:0;bottom:0}gridster-item:hover .gridster-item-resizable-handler.handle-se{border-color:transparent transparent #ccc}\n"],encapsulation:2})}return h})(),vt=(()=>{class h{static#t=this.\u0275fac=function(i){return new(i||h)};static#e=this.\u0275mod=r.oAB({type:h});static#i=this.\u0275inj=r.cJS({})}return h})()}}]);